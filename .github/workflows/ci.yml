name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node_version: [20, 22]
      fail-fast: false
    timeout-minutes: 10

    name: 'Build&Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Set git to use LF on Windows
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Versions
        run: |
          echo "pnpm: $(pnpm --version)"
          echo "npm : $(npm --version)"
          echo "node: $(node --version)"
          echo "process.versions:"
          node -p process.versions

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Lint: node-22, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Set node version to 22
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.21.1
          cache: 'pnpm'

      - name: Prepare
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Check formatting
        run: pnpm prettier --check .

  audit:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: 'Audit: node-22, ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4.2.0

      - name: Set node version to 22
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22.21.1
          cache: 'pnpm'

      - name: Prepare
        run: pnpm install --frozen-lockfile

      - name: Audit production
        run: pnpm audit --prod

      - name: Audit all
        continue-on-error: true
        run: pnpm audit

      - name: Check outdated dependencies
        continue-on-error: true
        if: github.ref == 'refs/heads/main'
        run: pnpm outdated --long
